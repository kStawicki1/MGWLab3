// class version 55.0 (55)
// access flags 0x31
public final class Main {

  // compiled from: Main.kt

  @Lkotlin/Metadata;(mv={1, 8, 0}, k=1, xi=48, d1={"\u0000$\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0008\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u0011\n\u0002\u0010\u000e\n\u0002\u0008\u0003\n\u0002\u0010\u0015\n\u0000\u0008\u00c6\u0002\u0018\u00002\u00020\u0001B\u0007\u0008\u0002\u00a2\u0006\u0002\u0010\u0002J\u001b\u0010\u0003\u001a\u00020\u00042\u000c\u0010\u0005\u001a\u0008\u0012\u0004\u0012\u00020\u00070\u0006H\u0007\u00a2\u0006\u0002\u0010\u0008J\u000e\u0010\u0009\u001a\u00020\u00042\u0006\u0010\n\u001a\u00020\u000b\u00a8\u0006\u000c"}, d2={"LMain;", "", "()V", "main", "", "args", "", "", "([Ljava/lang/String;)V", "printArray", "array", "", "kotlinMgw"})

  // access flags 0x19
  public final static LMain; INSTANCE
  @Lorg/jetbrains/annotations/NotNull;() // invisible

  // access flags 0x2
  private <init>()V
   L0
    LINENUMBER 2 L0
    ALOAD 0
    INVOKESPECIAL java/lang/Object.<init> ()V
    RETURN
   L1
    LOCALVARIABLE this LMain; L0 L1 0
    MAXSTACK = 1
    MAXLOCALS = 1

  // access flags 0x19
  public final static main([Ljava/lang/String;)V
  @Lkotlin/jvm/JvmStatic;()
    // annotable parameter count: 1 (invisible)
    @Lorg/jetbrains/annotations/NotNull;() // invisible, parameter 0
   L0
    ALOAD 0
    LDC "args" -> pushuje zmienną args na stos
    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkNotNullParameter (Ljava/lang/Object;Ljava/lang/String;)V -> wywołuje Intrinsics.checkNotNullParameter na zmiennej args
   L1 -> 
    LINENUMBER 5 L1
    BIPUSH 7 -> dodajemy liczbe 7 na stos, odpowiedzialna za długość tablicy
    NEWARRAY T_INT -> tworzymy nową tablice intów, długością jest pierwsza wartośc ze stosu
    ASTORE 2 -> zapisujemy referencje do indeksu 2
    ALOAD 2 -> zczytujemy referencje z indeksu 2
    ICONST_0 
    ICONST_2
    IASTORE -> ICONST_0 ICONST_2 i IASTORE analogiczne do bytecode'u javy, odpowiadają za umieszczenie wartości w tablicy
    ALOAD 2 -> teraz znowu musimy wczytać naszą tablice na stos, ponieważ dodanie elementu do niej zdjęło ją ze stosu
    ICONST_1
    ICONST_4
    IASTORE
    ALOAD 2
    ICONST_2
    ICONST_5
    IASTORE
    ALOAD 2
    ICONST_3
    ICONST_1
    IASTORE
    ALOAD 2
    ICONST_4
    SIPUSH 2137
    IASTORE
    ALOAD 2
    ICONST_5
    BIPUSH 9
    IASTORE
    ALOAD 2
    BIPUSH 6
    BIPUSH 6
    IASTORE
    ALOAD 2
    ASTORE 1 -> zapisuje referencje na tablice do indeksu 1
   L2 -> wykonywane tak samo jak w javie
    LINENUMBER 6 L2
    ICONST_0
    ISTORE 2
   L3 
    ALOAD 1 -> wczytuje referencje tablicy z pamięci lokalnej
    ARRAYLENGTH -> wczytuje rozmiar tablicy
    ICONST_1
    ISUB -> odejmowanie rozmiaru tablicy i wartości 1
    ISTORE 3 -> zapisanie wyniku odejmowania w pamięci lokalnej, jest to wartość odpowiedzialna za koniec 1 pętli sortowania
   L4 -> sprawdzenie czy kontynuujemy pętle zewnętrzną sortowania
   FRAME APPEND [[I I I]
    ILOAD 2 
    ILOAD 3
    IF_ICMPGE L5 -> sprawdzenie czy wartość spod indeksu 2 jest większa od wartości spod indeksu 3, jeśli tak to idziemy do L5
    ICONST_0
    ISTORE 4
   L6 -> zapisanie wartości odpowiedzialniej za zakończenie pętli wewnętrznej do pamięci lokalnej
    ALOAD 1
    ARRAYLENGTH
    ILOAD 2
    ISUB
    ICONST_1
    ISUB
    ISTORE 5
   L7 -> linia odpowiedzialna za zakończenie pętli wewnętrznej
   FRAME APPEND [I I]
    ILOAD 4
    ILOAD 5
    IF_ICMPGE L8 
   L9 -> sprawdzenie warunku if, jeśli jest spełniony przechodzimy do L10
    LINENUMBER 7 L9
    ALOAD 1
    ILOAD 4
    IALOAD
    ALOAD 1
    ILOAD 4
    ICONST_1
    IADD
    IALOAD
    IF_ICMPLE L10
   L11 -> dodanie nowej zmiennej pomocniczej do pamięci lokalnej 
    LINENUMBER 8 L11
    ALOAD 1
    ILOAD 4
    IALOAD
    ISTORE 6
   L12 -> zamiana wartości w tablicy
    LINENUMBER 9 L12
    ALOAD 1
    ILOAD 4
    ALOAD 1
    ILOAD 4
    ICONST_1
    IADD
    IALOAD
    IASTORE
   L13 -> kolejna zmiana wartości w tablicy
    LINENUMBER 10 L13
    ALOAD 1
    ILOAD 4
    ICONST_1
    IADD
    ILOAD 6
    IASTORE
   L10 -> inkrementacja zmiennej lokalnej i przejście do kolejnej lini
    LINENUMBER 6 L10
   FRAME SAME
    IINC 4 1 -> inkrementacja zmiennej lokalnej pod indekse 4
    GOTO L7 -> idziemy do L7
   L8 -> odpowiedzialne za inkrementacje zmiennej w 1 pętli sortowania, inkrementuje i idziemy do L4
   FRAME SAME
    IINC 2 1
    GOTO L4
   L5
    LINENUMBER 13 L5
   FRAME CHOP 2
    GETSTATIC Main.INSTANCE : LMain; -> pobranie statycznej instacji Main
    ALOAD 1 -> dodanie tablicy na stos
    INVOKEVIRTUAL Main.printArray ([I)V -> wywołanie metody printArray i pobranie 1 wartości ze stosu jako argumentu
   L14 -> zakończenie działania
    LINENUMBER 14 L14
    RETURN
   L15
    LOCALVARIABLE temp I L12 L10 6
    LOCALVARIABLE j I L6 L8 4
    LOCALVARIABLE i I L3 L5 2
    LOCALVARIABLE arr [I L2 L15 1
    LOCALVARIABLE args [Ljava/lang/String; L0 L15 0
    MAXSTACK = 5
    MAXLOCALS = 7

  // access flags 0x11
  public final printArray([I)V
    // annotable parameter count: 1 (invisible)
    @Lorg/jetbrains/annotations/NotNull;() // invisible, parameter 0
   L0
    ALOAD 1 -> wczytanie wartości z pamięci lokalnej
    LDC "array" -> zpushowanie zmiennej array na stos
    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkNotNullParameter (Ljava/lang/Object;Ljava/lang/String;)V -> sprawdzenie czy wartość ze stosu nie jest nullem
   L1
    LINENUMBER 17 L1
    ICONST_0
    ISTORE 2
   L2
    ALOAD 1
    ARRAYLENGTH
    ISTORE 3
   L3
   FRAME APPEND [I I]
    ILOAD 2
    ILOAD 3
    IF_ICMPGE L4
   L5
    LINENUMBER 18 L5
    ALOAD 1
    ILOAD 2
    IALOAD
    ISTORE 4
    GETSTATIC java/lang/System.out : Ljava/io/PrintStream; 
    ILOAD 4
    INVOKEVIRTUAL java/io/PrintStream.println (I)V
   L6
    LINENUMBER 17 L6
    IINC 2 1
    GOTO L3
   L4
    LINENUMBER 20 L4
   FRAME SAME
    RETURN
   L7
    LOCALVARIABLE i I L2 L4 2
    LOCALVARIABLE this LMain; L0 L7 0
    LOCALVARIABLE array [I L0 L7 1
    MAXSTACK = 2
    MAXLOCALS = 5

  // access flags 0x8
  static <clinit>()V
    NEW Main
    DUP
    INVOKESPECIAL Main.<init> ()V
    PUTSTATIC Main.INSTANCE : LMain;
    RETURN
    MAXSTACK = 2
    MAXLOCALS = 0
}
